%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 62 562 502 736
% EPSF created by ps2eps 1.22
%%Title: (mist.pdf)
%%Version: 1 2
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
%%EndProlog
%%Page 1 1
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select ªLanguage Level 1º in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
userdict /pdf_svglb currentglobal put true setglobal
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
userdict /pdf_svglb get setglobal
/currentpacking where{pop currentpacking true setpacking}if
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
PDFVars begin PDF begin
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
userdict /pdf_svglb get setglobal
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
[/N21/Courier -1 TZ
[/N17/Courier-BoldOblique -1 TZ
[/N9/Courier-Bold -1 TZ
[/N19/Courier-Oblique -1 TZ
PDFVars/TermAll get exec end end
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
8.5 -25 translate
userdict /pdf_svglb currentglobal put true setglobal
ct_CffDict begin
16 dict begin
/FontInfo 13 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek and Galapagos Design Group. Copyright (c) 1996-2001 Wolfram Research, Inc.  [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/FullName (Mathematica2Mono) def
/FamilyName (Mathematica2Mono) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /QEPAYH+Mathematica2Mono def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -189 -4091 1915 2469 } def
/XUID [6 5095653 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33F3E4653BCB2699794C4C0FED26DFDB4512C61F630295C3689A8C6
E802A3F3B45175040C03F71893AFAE09B3CE57EEAA4E8BE83372AC4971E47776
E52845C154788E251A44F0A86D26337D0D2A137E7617330C90BCA9862D7B1FF4
B2DD5D8729A32373FAFFDCC1976FF6F60ADFDDD9A3C82CDC24FA4E3D1E148D91
43C435E34B1F9246B0238E6386F2E127750189CE868D4D3A20FF5C549F0D9DE2
00C6C16BE3C6626CB576B93D1E97B64D31404656644A5E27FA00F46D7283A03D
7D3E56D2536820DBCE0BF14F4A182A51A06D352782EFF4796614F76C916E5523
B20847D120DEF623CF49AA7EAA66FCCF7BB06D2D0FEB80DE6FEF94BF739E1AC0
2EDBA72B43A9112202B016B24E872E071F8BAD7C02D5BB9262DCB86A12FE950E
80AF67A053BC87C3A8DFA47827EDD015979B87B977824CED37281CC2D9652C41
E19B5F464213F1DF080EA8009716F6A58C8AAB00C226EAB40E6F0B310082D925
9E89DCCF44F999120BD1BCA4F1BB4A9C69A02ED64AC30D388985BEE02CC3381F
DCFE95FDA1CD124828D889864AD4915C38F963B9BFEFEFAEEB3C0FEC2359AA3A
4FF3118B06FAF2779E2C9DD342428AB326FBFA0775182B2BF47FD97D49FBEF14
31E32644AA63688378D517CAE8D80CE99FFC472DFF2C1307F62B1E0F847E3310
4F22CB50D98BBCB17960E4733A6F588B375BE1B1EBBCA15C4ABBCD234CCFBFCF
BBCD9134CCECC8C42C52D1BB322961DA1FD219D401594BFFDAC427E4FD65FF87
12749A9AA138A0329C0D0A43D85EC322F4B52DF603EB4124372FA08EC9675B0D
F00DB69D06D843E390D124764EEB7E4975AC1B1E9A90FE8CC03F462D77B9F223
AD5523406106AC7FAB153BC00F196D58244AFCC42025877B0B86E7F9E3F13E5F
315E90974B18094FAB808D4197AB8D79863CEC98797D447A311C92BDBF3305E8
0A056593AEC665E04BDEBE4F51ECB5EB3B03C60F716DFE81D39359DFBAD8F77E
90BA8B977D99B10EC0A43845DB74A31B8E86E7E8ECA53E798DB7610BAEF3CF77
9A24362616D02CF315925376BE4F7F92D0C730494B94A8001A233C534A08676D
6B41EED488E37FB37DE75A51616AB77A31EFE42BA3249C04B2BB62084B14B074
86D55DA5FB16CBE04CDD9E22DB6D413D84A47E1C3B84D460FCBF378A61DBFD6F
C169D7D569647EA2DD391143CB04972A471965056F276E2865C733020FFAA1CE
E84EA15D462F91E0D4D674F1AD900CE335A4AF76B9F99DAEAAF540C0D921DFFC
4D941297B4D0C2B708E4D4BB1913BD0C38C942528B2CC3032212BA505D365DE6
15C358ECAB5F7142F40CC9926E9B07C5AF2FC24696F44B9F6E4FB0AB0E841FBC
252EA1DCC56EB63B6EC265B5C944A3E32020F3617761C7762148C80DB00CEC15
7C4A70491CB99AB9B81F9A19912052905E84C536880FCB8AE85CEAC38682DDC3
A1B280404278EEFB1E52A1830CE0559883AE29AE7285F41F03E0ED013F327048
9BE041051957A1A8CEB89BF16BBDBC4BEAFADF4F221479223D1DB675D3D7F79A
6AFBE2942695FAB5AB2DC19009A19EBB0799D0ADCE66995701EF785345486077
1D59AF011611A6F878122E43FA5D4A24135F8DCC0DB2E0EEB35FA5330C90FEAF
1FE413267476E52E7349324ECB079E88D357548FEDC7B79F508D02E27E9ED80C
C77DAEA8CFECDE42DA3D088B8DCD20790789BE40B6C5B05C0741820AB1336A21
6E75241EDE50C65992D391E584C12D833E1D69AA5A34BC0B1ACF6D0C469B4523
DAD0FB770D8E35054B8CC7EF1DF04F39DB02164120E07BD9C3FFB9EA08C1EDB4
6419E400076788168DB91D8278A1FFCE5B0313444B2D59A16A741EF01E9138AE
66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/QEPAYH+Mathematica2Mono findfont /Encoding get
dup 0 /.notdef put
pop
end
/QEPAYH+Mathematica2Mono findfont /Encoding get
dup 0 /.notdef put
dup 105 /LParenTop put
dup 106 /LParenExtens put
dup 107 /LParenBottom put
dup 121 /RParenTop put
dup 122 /RParenExtens put
dup 123 /RParenBottom put
pop
userdict /pdf_svglb get setglobal
[/N27/QEPAYH+Mathematica2Mono -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
ct_CffDict begin
16 dict begin
/FontInfo 13 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek and Galapagos Design  Group, with Stephen Wolfram. Copyright (c) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/FullName (Mathematica1Mono-Bold) def
/FamilyName (Mathematica1Mono) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /OGJTPX+Mathematica1Mono-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -49 -229 1380 853 } def
/XUID [6 5095652 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9F4CA0E22590985F21D2B21F5FC64A42220B8D920973F4E1EE8163
F38A8B629A889237C288AD1090FA98869851F93952020F2C378C4BFAE73DDB48
FED9F0DEDF3CD4D2335391E3718EE749AC3F758A60E46EBF489F2DA20B176F40
C340FFC9C7BC4B9E20CEA956B2706E64551F65D4A2CE42D08EB4D273956911CA
2F923C4BC3BFC32060EE769452032EB338CA0B7E5440CCAE5A0AFD5BF07AD6AB
EA4CEE0E415C963DB8A0EB248023FA02731EBD1C86CC12F587502BC53F19504A
5316AC88256E82126BCBF102226A87DDB5D0F123E0A678177CC648B377EB298D
9BF5191432BB5D5AE3063F7513CB1298AA8AE6629F9F0E65708CD8A2B91FB0C7
F83A9EB85BF04C030E2D60ACE550C9940CA06D79FC10D8E4C7B77051D605B2E5
B9E3F8CFD2A29B5300917BFBC8DC6A231F8E9E5D84E9C0940C7394507D700D5B
AAC14B02782B944E99EB0E27A96B5B95ABAEF81AF0B166B10E98C768DCC30D5A
E5CFB610D4CB3CAE98A5BE2BA73D0E00D1EA68AB4407A6990D06BB14A8D7DE24
34A414CEC867EF5D6F55F7B4EDD7E174BF1B5AB2E0374F85D8111F6F08C68C16
06985849B29EA14791364794430E3AE40E9EC24018747753F4C2F5B3DBE8BF9D
ADF79F0EA56B5DBD9880F0231BD0B224E3D31A1E4EFFBD4F6B36797899FEC68B
35E1E2DC3A89DC7AF343C0DA58EA841ED560CACA23332D54A4A51F8D13739721
9226AC122A876095FE8001C660179193E925E67A275D4CC292D8CDB9DD07EF7B
CEDAFC862A85E55953810CA550686979298CA95328CF4D81C80855D3FB96A793
AE887A787ECACAB445E25111840775BFE9BF4CB9207A8035649E11CF4B7926D5
C5AF95C4BC92CE6419A5260E0673A5F1B0243FFBE650FF6C49D67645551EB889
01F13297D0C248FA16A8BF38067733121BB9E0F72A0B91AB87F1ACDFD0475E82
FA567CCC7ADA9B820B1DF829228F713F9CFC8223465D9554C12840FB750E7E6A
677D1CD61C7F6A3AC8A97FC6D60BEBE93F4A7566999968A3765B7FE280D70EC1
6390E94247C03CFD8275724B115086B8023702C886FD26E8DBD8E44EEB506457
EFB1EECD4C5310BC1DDCA457CA7BCB0DA6FA4BE68C1F272323139E63E164F559
C5E5C2BF0A84CF83DB38680217B6998B9742DBA26716C328C9C8D790410F5A31
1073952B7F9B6913A686EAC0CA6255FA042BCF0F7C4EBDE676A2245F48C3A724
DFE89118B536DF4AC68F8F55140192BED4301787AC9B2A7A7E1346B138E7C7D1
8C3FB3A3B8DC5E8C477D69B2C4B13AD83721964B51F470CD97BD01612A3479DA
2096F095BA1BA618CC80345205D02FF6A8D566BB1E8845E78EF55E4D87935C3A
83EE1F0BA2D5626287C5940BFB217CC7EB6899E44D9EC4984A5ECDFA5252AE5E
21FC3CECE464BBF8A7024FD38D96C21253E2D46D628F7646706FDFBD378FBDD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/OGJTPX+Mathematica1Mono-Bold findfont /Encoding get
dup 0 /.notdef put
pop
end
/OGJTPX+Mathematica1Mono-Bold findfont /Encoding get
dup 0 /.notdef put
dup 61 /Equal put
pop
userdict /pdf_svglb get setglobal
[/N15/OGJTPX+Mathematica1Mono-Bold -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
ct_CffDict begin
16 dict begin
/FontInfo 13 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek and Galapagos Design Group. Copyright (c) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/FullName (Mathematica2Mono-Bold) def
/FamilyName (Mathematica2Mono) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /UETVJA+Mathematica2Mono-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -209 -4039 2006 2212 } def
/XUID [6 5095654 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9F4CA0E22590985F21D2B21F5FC64A42220B8D9208A04D24DC122B
A694C4C610E2606741463676B0C266EA9788C430809FB1C09EB6831E9D68DFE2
968F79604A7AACA1EA39753CF21F4BC3CD96B1954CD83CB258638D6EED25A8AA
A198E3C21A51CD4D91A42AB7CFFCE1AF37EAB58DC555BAB686482E6FDEEB654F
4FE80F89DC6D52CC2FB723923CFBEF8F6D0F970246F0C30218E10B580275A321
5C10D2B852F00181C4C09D73D2F5B345E8FB55AD02C46BACBF061924222AD054
B815010D3A68F23B7F764CA2BAE10CCBBD884339F6D85CB087FAAE0ACC75128B
A17C22031C6E30E70649317B4F1B7C5D96151A9064F180D01D5E809264C0549D
1CEC48233CCE6D534E2CB45A17D7438AC422FE7552B136D03AF90C2599A6DC33
CD431D54DD6971935252A68F610E464F229C3F8E6EB10323090B0082C0108DFA
F47A7052D9700FC4825763CE06E38000BCFF8710EB440F3FB23DE65D70B01421
21576F5B7898BCD1E9303EC848BED914850DDCF99A91BDBB892AF25DA1B335AF
5614C9EC160CD62CE83276DA24E45D8B7D26C0DD4616B235B9B91493EF8A8537
D9260FD497BCDFC4A8BEED196942C8F1325F71E14585B7B6A8E4C6DCF9139D37
EEFFBEAD0C1DB852999BB4969688FAE7D11C9A59AC7C75949986C9A63B84F8D7
814A8A746534E3CCC063A925DBD09CE37E7626325AE29D98FF0765BDDCC87DF3
6A340C36908B95FEEA0E07D3A50DB16310DCE1E7FCEF5355288CC81FDCC37EE7
168B833A09DE7C5002FD7EA4727779A265FBEA0E18E98D5DD7BB162A06AA704B
5C9096400839BD9C7072845D730301CE8FD537811350333FFC112269856B40A6
93618AF3211FE78E26E2462D4CC6297F3803CC34C44076092F765436E5015A93
C8D70DA27710648BD11ED6891DBC582B3AE23FB45A9E9C2FECEF41F868849BDC
64FA4ECD21C8BD543EF0DFAD8B6F3D1E9DEC3D9A4AEB17EA56B73B3962258A52
01A9BFD94658F1F21B01928257EAE05BE1BBCC3A965CA4B0D9FBE2BA2E7D8B5F
5373F20091C0F9DB129A9949B69AC94FEF5F0B8CFACCA0BE6CA9A84A0BA7C3C6
E7D1F2FD32C072BDC89A1D003A29D56A6C2E5F58B4C8EADA678CE4A92E673645
F56ADA2D4722ADC032477D286CD828DA3283D8BC1FCCC3CD49BC4C410A5E4D9E
781682C38BEC694C95F54D9402110816DE1ADE04A9CF8BC713313D3935953E6A
39359892827BE07A8DB65D8EC0AC2A68AC9327344546BF3C37F4901B94133A17
E2C2607ABFC840656417233C20D0C54674A51E632F28973B6433B8EE58772DAB
3E79B7EC4FE6FA73CBD5BE4D620AE95F4566F9B733AD6222142EAF3BFE99AD3E
8FD65A8ECA177CA56D725225382B5D9E97F9A8828BE07343FACFA463349DB91D
5A3217DF89A978FE3A5F66731222FEEB09C249D434BFA071D152538D32343AFD
D7270FE3E48FADE7AEAB18EC823A52D8A5985139C4DF38940305C714F246E2FA
8C9E1CAE825EE535F6787D475EADEB5B307F85F3CB98DF6FFECCDF79E9FACEF6
557D0FE0BA8A43161C28AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/UETVJA+Mathematica2Mono-Bold findfont /Encoding get
dup 0 /.notdef put
pop
end
/UETVJA+Mathematica2Mono-Bold findfont /Encoding get
dup 0 /.notdef put
dup 64 /LBracket1 put
dup 68 /RBracket1 put
pop
userdict /pdf_svglb get setglobal
[/N12/UETVJA+Mathematica2Mono-Bold -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
ct_CffDict begin
16 dict begin
/FontInfo 13 dict dup begin
/Notice (Mathematica typeface design by Andre Kuzniarek and Galapagos Design  Group, with Stephen Wolfram. Copyright (c) 1996-2001 Wolfram Research, Inc. [http://www.wolfram.com]. All rights reserved. [Font version 2.00]) def
/FullName (Mathematica1Mono) def
/FamilyName (Mathematica1Mono) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /ZJYAJF+Mathematica1Mono def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -16 -197 1296 853 } def
/XUID [6 5095651 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33F3E4653BCB2699794C4C0FED26DFDB4512C61F631FB61CDFAC60D
5526C3077A25CE7810A957066436357107E1A8AF7BCA21A92B19BF9DFBE10246
1ACEC823B6F05195028E9D0A45EE1EC45D57E2440AD45391BFB384E55A08580A
E224E344BC92D3E8DE22199BE9CCA53A82B1190D75606066AB17A16B389C9613
E8D30E22DA16FFB55F7478DE8850F54E7E648DC46D7757585939B8EEE729C106
D4E43F9DF2CC5F56410F924EFF73D9350E29678EA24FCF71876F5C8D87DE4E6F
72F0E03FC4D0B68DA134F31EFD32367238FE947829EDD25F1C62C85F9C5A8697
50C7003F5B6700BEB83BBB25B60DBA5C4F5A5746BBECD91FA11AD443DBE92E6D
6F7648834FE1192BF40BA4A3FB0255F450CBE9597F2139D9914F1D98507C5439
41CFC61384890594A9DD3B76F932E1D84D2C66A1B92B4AF4554CC5CC93DD8A6F
4BB477AD272FF4DF869880BAA03CB79381E0BD0E2E396DCA80BC8EF493F546CD
D16DF44C90072B4804E8202EFC979002ADD9F79EC2FE4CBE820092B2A7525590
4FA994E44565749305EECB5A903658345240BCB550E9B0E70398C35E0A0CC3A0
B238E83BEE5A14C3DAE4BD32A14AA5BFFD5234023871D27294BF03F3FAF2F3B3
158970DCB124240F5ED65E141E01B81EA5E771CDD39D26A58B314C7455F52702
2F9A51AAE779C582C457F659263FFF1F9AF77129322F070877C3E220053ADCC6
04C0FF697AB6EBC2D632089FF8042C184809F8BBA0610EDB6F3ADCF3BE54FCC6
A9A01670982B1925D25C00F2CAE20D5432F706D9A284FC107304DA632EDE744D
EE12B78BF939EC35C0A29819480D0B92413729DA314A54399A46FA7725C45C18
0C27ECF223F218234D1157EDF31EF53AD82FF66A3A1D3B3289DBD8CD736B34D1
F0699BE368244D4FD630393C7812A7BB7B6FAF6567B54547DFF798E2E682C6FB
13A61F26574B1146E1486057C19B408097DEF645FFA3DBFE9E23D7F6E292731C
73718B21F73EB762CECDA3BEF712A295DE6EEDDE852E6BD0985E3EF155725939
F142AF69C6DD74487FC1F6D500E92370DD6B19879FF76D881BC3DBBCA80B6FD8
78D46EE28915D503987631D6278AC4AC906E6B34E3B9A0F04D1B63CBBE27066B
E677CE7302C8D712849A0851E50F55C6637F35017BF20B3941C149DE1D4CB989
0A1B4251441CB27472616258B022E16F83285A07EB6DE49A17B1B688659B29ED
1D3D17B08F99D73725AB50D9E7D2CD3AE5A511FE7CEEE887428B3FB61107A095
FCF6BDC51FF54C88E2D211E79207BBDDD86F9A8ED56A006B94DB7E865643790F
D990003E2E9D587AD5FE4AB315E0942817AA58F0A10AF92C81D443124A717679
2B77415221C8D16A6DBED37EBDF50643BDBE165F44CAC7B9C5CBB47D9BF7A9E3
8073753CBCDD592EBF9803CACA9220073164698491A8B79F2F3B246763574D7E
31B4083F4CB9C07F49CAF729B709E68242913136F42355BB5E788194490E8FE8
0D972060ED5A05CC1099A1A22206FBC6185224B5207641DBB0A1B9800A82C8A9
6E69BF9B6912E91812D479A31335E3A63EDBA6B2BD430FDC6FD9D36C2F690642
3CEC49B10D7E2E7BA3EB58C4121C5991714E340DE991C18290B4817A74BFF1CA
22E78E90D69B52C85D37F51C9B69213F9ED4897FC32E0D10DBC24EEA090B133B
639805C82468CC9399A10487AD1594D89745C63918F19D869051EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ZJYAJF+Mathematica1Mono findfont /Encoding get
dup 0 /.notdef put
pop
end
/ZJYAJF+Mathematica1Mono findfont /Encoding get
dup 0 /.notdef put
dup 43 /Plus put
dup 45 /Minus put
dup 61 /Equal put
dup 228 /Imagi put
pop
userdict /pdf_svglb get setglobal
[/N24/ZJYAJF+Mathematica1Mono -1 TZG
0 0 595 842 re
W
n
q
0.0999908 0 0 0.0999908 0 0 cm
q
{} settransfer
Q
q
n
0 6820 m
5040 6820 l
5040 7603.75 l
0 7603.75 l
0 6820 l
h
W
n
n
555 6820 4380 778.75 re
[/DeviceGray] cs 0.850998 sc
f
Q
q
n
640 6900 m
5040 6900 l
5040 7513.75 l
640 7513.75 l
640 6900 l
h
W
n
q
10 0 0 10 0 0 cm
[/DeviceGray] cs 0 sc
66 744.125 m
/N9 10 Tf
(ClearAll)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
114 744.125 m
/N12 10 Tf
(@) show
120 744.125 m
/N9 10 Tf
(Yd)
[5.99991 5.99991 ] pdfxs
132 744.125 m
(,) show
141.562 744.125 m
(Yu)
[5.99991 5.99991 ] pdfxs
153.562 744.125 m
(,) show
163.125 744.125 m
(UCKM)
[5.99991 5.99991 5.99991 5.99991 ] pdfxs
187.125 744.125 m
/N12 10 Tf
(D) show
193.125 744.125 m
/N9 10 Tf
(;) show
65.9999 733.687 m
(Yd)
[5.99991 5.99991 ] pdfxs
80.9999 733.687 m
/N15 10 Tf
(=) show
89.9999 733.687 m
/N9 10 Tf
(rndMatrix)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
144 733.687 m
(;) show
65.9999 723.813 m
(Yu)
[5.99991 5.99991 ] pdfxs
80.9999 723.813 m
/N15 10 Tf
(=) show
89.9999 723.813 m
/N9 10 Tf
(rndMatrix)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
144 723.813 m
(;) show
65.9999 713.875 m
(UCKM)
[5.99991 5.99991 5.99991 5.99991 ] pdfxs
92.9999 713.875 m
/N15 10 Tf
(=) show
102 713.875 m
/N9 10 Tf
(Catch)
[5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
132 713.875 m
/N12 10 Tf
(@) show
138 713.875 m
/N9 10 Tf
(CKMMatrix)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
192 713.875 m
/N12 10 Tf
(@) show
198 713.875 m
/N9 10 Tf
(Yu)
[5.99991 5.99991 ] pdfxs
210 713.875 m
(,) show
219.562 713.875 m
(Yd)
[5.99991 5.99991 ] pdfxs
231.562 713.875 m
/N12 10 Tf
(D) show
237.562 713.875 m
(D) show
243.562 713.875 m
/N9 10 Tf
(;) show
65.9998 703.375 m
(Print)
[5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
95.9998 703.375 m
/N12 10 Tf
(@) show
102 703.375 m
/N9 10 Tf
(") show
108 703.375 m
/N17 10 Tf
(U) show
114 701.813 m
/N9 7.125 Tf
(CKM)
[4.27493 4.27493 4.27493 ] pdfxs
128.188 703.375 m
/N15 10 Tf
(=) show
134.188 703.375 m
/N9 10 Tf
(") show
140.188 703.375 m
/N12 10 Tf
(D) show
146.188 703.375 m
/N9 10 Tf
(;) show
65.9998 692.875 m
(Print)
[5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
95.9998 692.875 m
/N12 10 Tf
(@) show
102 692.875 m
/N9 10 Tf
(MatrixForm)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
162.25 692.875 m
/N12 10 Tf
(@) show
168.25 692.875 m
/N9 10 Tf
(UCKM)
[5.99991 5.99991 5.99991 5.99991 ] pdfxs
192.25 692.875 m
/N12 10 Tf
(D) show
198.25 692.875 m
(D) show
204.25 692.875 m
/N9 10 Tf
(;) show
Q
Q
q
n
0 720 m
5040 720 l
5040 7703.75 l
0 7703.75 l
0 720 l
h
W
n
10 w
2 J
n
555 6825 m
555 7598.75 l
[/DeviceGray] cs 0 sc
S
n
4935 6825 m
4935 7598.75 l
S
n
555 7598.75 m
4935 7598.75 l
S
Q
q
n
0 6480 m
5040 6480 l
5040 6760 l
0 6760 l
0 6480 l
h
W
n
n
540 6500.63 4240 259.37 re
[/DeviceGray] cs 0.701996 sc
f
Q
q
n
620 6580.63 m
5040 6580.63 l
5040 6680 l
620 6680 l
620 6580.63 l
h
W
n
q
10 0 0 10 0 0 cm
[/DeviceGray] cs 0 sc
64 660.75 m
/N19 10 Tf
(U) show
70 659.187 m
/N21 7.125 Tf
(CKM)
[4.27493 4.27493 4.27493 ] pdfxs
84.188 660.75 m
/N24 10 Tf
(=) show
Q
Q
q
n
0 5865 m
5040 5865 l
5040 6400 l
0 6400 l
0 5865 l
h
W
n
n
540 5865 4240 535 re
[/DeviceGray] cs 0.701996 sc
f
Q
q
n
620 5945 m
5040 5945 l
5040 6320 l
620 6320 l
620 5945 l
h
W
n
q
10 0 0 10 0 0 cm
[/DeviceGray] cs 0 sc
64 622.063 m
/N27 10 Tf
(i) show
64 596.563 m
(k) show
64 619 m
(j) show
64 616.375 m
(j) show
64 613.75 m
(j) show
64 611.125 m
(j) show
64 608.5 m
(j) show
64 605.875 m
(j) show
64 604.5 m
(j) show
78.688 624.437 m
/N21 10 Tf
(0.0334209)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
135.062 624.437 m
/N24 10 Tf
(+) show
143.438 624.437 m
/N21 10 Tf
(0.362879)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
194.062 624.437 m
/N24 10 Tf
(\344) show
214.938 624.437 m
(-) show
221.562 624.437 m
/N21 10 Tf
(0.0692623)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
277.938 624.437 m
/N24 10 Tf
(-) show
286.312 624.437 m
/N21 10 Tf
(0.115267)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
336.938 624.437 m
/N24 10 Tf
(\344) show
357.812 624.437 m
/N21 10 Tf
(0.168338)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
408.188 624.437 m
/N24 10 Tf
(+) show
416.562 624.437 m
/N21 10 Tf
(0.905969)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
467.188 624.437 m
/N24 10 Tf
(\344) show
81.3748 611.187 m
(-) show
87.9998 611.187 m
/N21 10 Tf
(0.76602)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
132.375 611.187 m
/N24 10 Tf
(-) show
140.75 611.187 m
/N21 10 Tf
(0.522548)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
191.375 611.187 m
/N24 10 Tf
(\344) show
215.25 611.187 m
/N21 10 Tf
(0.0123705)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
271.625 611.187 m
/N24 10 Tf
(+) show
280 611.187 m
/N21 10 Tf
(0.0569267)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
336.625 611.187 m
/N24 10 Tf
(\344) show
357.812 611.187 m
/N21 10 Tf
(0.319403)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
408.188 611.187 m
/N24 10 Tf
(+) show
416.562 611.187 m
/N21 10 Tf
(0.186401)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
467.188 611.187 m
/N24 10 Tf
(\344) show
72.3748 597.937 m
(-) show
78.9998 597.937 m
/N21 10 Tf
(0.0728749)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
135.375 597.937 m
/N24 10 Tf
(+) show
143.75 597.937 m
/N21 10 Tf
(0.0452632)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
200.375 597.937 m
/N24 10 Tf
(\344) show
217.938 597.937 m
(-) show
224.562 597.937 m
/N21 10 Tf
(0.923052)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
274.938 597.937 m
/N24 10 Tf
(+) show
283.312 597.937 m
/N21 10 Tf
(0.355664)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
333.938 597.937 m
/N24 10 Tf
(\344) show
351.5 597.937 m
(-) show
358.125 597.937 m
/N21 10 Tf
(0.117296)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
408.5 597.937 m
/N24 10 Tf
(-) show
416.875 597.937 m
/N21 10 Tf
(0.0189635)
[5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 5.99991 ] pdfxs
473.5 597.937 m
/N24 10 Tf
(\344) show
482.75 622.063 m
/N27 10 Tf
(y) show
482.75 596.563 m
({) show
482.75 619 m
(z) show
482.75 616.375 m
(z) show
482.75 613.75 m
(z) show
482.75 611.125 m
(z) show
482.75 608.5 m
(z) show
482.75 605.875 m
(z) show
482.75 604.5 m
(z) show
Q
Q
q
n
0 0 m
0 8420 l
5040 8420 l
5040 0 l
h
W
n
5 w
2 J
n
-60 8423.75 m
-460 8423.75 l
0 8483.75 m
0 8883.75 l
5100 8423.75 m
5500 8423.75 l
5040 8483.75 m
5040 8883.75 l
-60 0 m
-460 0 l
0 -60 m
0 -460 l
5100 0 m
5500 0 l
5040 -60 m
5040 -460 l
[/DeviceGray] cs 0 sc
S
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
