#################################################################################################
# The package `REAP' is written for Mathematica 7 and is distributed under the
# terms of GNU Public License http://www.gnu.org/copyleft/gpl.html
#################################################################################################




<function name=Definitions>
<code>
ClearAll[Dagger];
Dagger[x_]:=Transpose[Conjugate[x]];
</code>
</function>

<function name=RGEGetYe>
<head>
RGEGetYe::usage="RGEGetYe[YukawaTauGUT] returns Ye at the GUT scale where Ye[[3,3]]=<YukawaTauGUT>";
</head>
<doc level=advanced>
\function{RGEGetYe[\param{Yukawa $\tau$}]} returns a suggestion for the Yukawa
matrix of the charged leptons at the GUT scale.  The parameter is the Yukawa
coupling of the $\tau$. The suggested matrix is diagonal.
</doc>
<code>
RGEGetYe[pYukawaTauGUT_?NumericQ]:=pYukawaTauGUT*DiagonalMatrix[{1/3*0.001, 2/3*0.01, 1}];
</code>
</function>

<function name=RGEGetY\[Nu]>
<head>
RGEGetY\[Nu]::usage="RGEGetY\[Nu][Y\[Nu]33,Y\[Nu]Ratio] returns Y\[Nu] at the GUT scale where Y\[Nu]=<Y\[Nu]33>*MatrixForm[DiagonalMatrix[{<Y\[Nu]Ratio>^2,<Y\[Nu]Ratio>,1}]]";
</head>
<doc level=advanced>
\function{RGEGetY$\nu$[\param{$\left(Y_\nu\right)_{33}$},\param{ratio}]} returns a suggestion of
the Yukawa matrix of $\nu$ at the GUT scale.  The first parameter is the mass of
the heaviest neutrino and the second parameter specifies the mass ratio between
the neutrinos. The result is a diagonal hierarchical matrix.
</doc>
<code>
RGEGetY\[Nu][p\[Nu]Factor_?NumericQ,pRatio_?NumericQ]:=Block[{lY\[Nu]},
    lY\[Nu]=p\[Nu]Factor*DiagonalMatrix[{pRatio^2,pRatio,1}];
    Return[lY\[Nu]];
];
</code>
</function>

<function name=RGEGetM>
<head>
RGEGetM::usage="RGEGetM[\[Theta]12,\[Theta]13,\[Theta]23,\[Delta],\[Delta]e,\[Delta]\[Mu],\[Delta]\[Tau],\[Phi]1,\[Phi]2,Mlightest,\[CapitalDelta]m2atm,\[CapitalDelta]m2sol,MassHierarchy,
vev of the Higgs coupling to the neutrinos  \!\(v\_u\) (GeV),Y\[Nu]] returns M\[Nu]r.";
</head>
<doc level=advanced>
\function{RGEGetM[\param{$\theta_{12}$},\param{$\theta_{13}$},
\param{$\theta_{23}$},\param{$\delta$},\param{$\delta_e$},\param{$\delta_\mu$},\param{$\delta_\tau$},\param{$\varphi_1$},\param{$\varphi_2$},\param{Mlightest},\param{$\Delta
m^2_\mathrm{atm}$},\param{$\Delta m^2_\mathrm{sol}$},\param{mass hierarchy}, \param{vu},\param{$Y_\nu$}]} returns a
    suggestion for the mass matrix of the right-handed neutrinos.
\begin{itemize}
\item The first 9 parameters specify the mixing matrix.
\item The 10th parameter is the mass of the lightest neutrino.
\item The 11th and 12th parameter are the mass squared differences of the
atmospheric and solar neutrino oscillations respectively.
\item The 13th parameter is the mass hierarchy. "i" means inverted and "r" or
"n" means normal.
\item The 14th parameter the neutrino Yukawa coupling matrix
\item The 15th parameter is the vev of the Higgs coupling
to the neutrinos.
\end{itemize}
<implementation>
  At first dimension 5 operator is constructed via the function \function{RGEGet$\kappa$}.Then the mass matrix of the right-handed neutrinos is calculated by the inverted seesaw formula:
  \begin{equation*}
    M=2 Y_\nu\kappa^{-1}Y_\nu^\mathrm{T}
  \end{equation*}
</implementation>
</doc>
<code>
RGEGetM[p\[Theta]12_?NumericQ,p\[Theta]13_?NumericQ,p\[Theta]23_?NumericQ,pDiracCP_?NumericQ,p\[Delta]e_?NumericQ,p\[Delta]\[Mu]_?NumericQ,p\[Delta]\[Tau]_?NumericQ,p\[Phi]1_?NumericQ,p\[Phi]2_?NumericQ,pMlightest_?NumericQ,p\[CapitalDelta]atm_?NumericQ,p\[CapitalDelta]sol_?NumericQ,pMassHierarchy_,pvu_?NumericQ,pY\[Nu]_?MPTNumericMatrixQ]:=Block[{l\[Kappa],lM\[Nu]r},
    l\[Kappa] = RGEGet\[Kappa][p\[Theta]12, p\[Theta]13, p\[Theta]23, pDiracCP, p\[Delta]e, p\[Delta]\[Mu], p\[Delta]\[Tau], p\[Phi]1, p\[Phi]2, pMlightest,p\[CapitalDelta]atm,p\[CapitalDelta]sol,pMassHierarchy,pvu];
    If[pMlightest==0,Print["Warning: One Neutrino is massless. Thus \[Kappa] is singular and can not be inverted. This results in large numerical errors. The returned right-handed neutrino mass matrix is calculated by \!\(M = 2*\((\(\((Y\_\[Nu]\^T)\)\^\(-1\)\) \[Kappa]\ \ Y\_\[Nu]\^\(-1\))\)\^\(-1\)\) instead of \!\(M = 2*\(Y\_\[Nu]\) \[Kappa]\^\(-1\)\ Y\_\[Nu]\^T\) which is used otherwise. Be careful in the interpretation of the results."];
			      lM\[Nu]r = 2*Inverse[Inverse[Transpose[pY\[Nu]]].l\[Kappa].Inverse[pY\[Nu]]],
			      lM\[Nu]r = 2*pY\[Nu].Inverse[l\[Kappa]].Transpose[pY\[Nu]]
    ];
			      
    Return[lM\[Nu]r];
];
RGEGetM[p\[Theta]12_?NumericQ,p\[Theta]13_?NumericQ,p\[Theta]23_?NumericQ,pDiracCP_?NumericQ,p\[Delta]e_?NumericQ,p\[Delta]\[Mu]_?NumericQ,p\[Delta]\[Tau]_?NumericQ,p\[Phi]1_?NumericQ,p\[Phi]2_?NumericQ,pMlightest_?NumericQ,p\[CapitalDelta]atm_?NumericQ,p\[CapitalDelta]sol_?NumericQ,pMassHierarchy_,pvu_?NumericQ,pY\[Nu]_?MPTNumericMatrixQ,p\[Kappa]_?MPTNumericMatrixQ,pY\[CapitalDelta]_?MPTNumericMatrixQ,p\[CapitalLambda]6_?NumericQ,pM2\[CapitalDelta]_?NumericQ]:=Block[{l\[Kappa],lM\[Nu]r},
    l\[Kappa] = RGEGet\[Kappa][p\[Theta]12, p\[Theta]13, p\[Theta]23, pDiracCP, p\[Delta]e, p\[Delta]\[Mu], p\[Delta]\[Tau], p\[Phi]1, p\[Phi]2, pMlightest,p\[CapitalDelta]atm,p\[CapitalDelta]sol,pMassHierarchy,pvu];
    l\[Kappa]=l\[Kappa]-(p\[Kappa]-2 p\[CapitalLambda]6/pM2\[CapitalDelta]*pY\[CapitalDelta]);

    If[pMlightest==0,Print["Warning: One Neutrino is massless. Thus \[Kappa] is singular and can not be inverted. This results in large numerical errors. The returned right-handed neutrino mass matrix is calculated by \!\(M = 2*\((\(\((Y\_\[Nu]\^T)\)\^\(-1\)\) \[Kappa]\ \ Y\_\[Nu]\^\(-1\))\)\^\(-1\)\) instead of \!\(M = 2*\(Y\_\[Nu]\) \[Kappa]\^\(-1\)\ Y\_\[Nu]\^T\) which is used otherwise. Be careful in the interpretation of the results."];
			      lM\[Nu]r = 2*Inverse[Inverse[Transpose[pY\[Nu]]].l\[Kappa].Inverse[pY\[Nu]]],
			      lM\[Nu]r = 2*pY\[Nu].Inverse[l\[Kappa]].Transpose[pY\[Nu]]
    ];
			      
    Return[lM\[Nu]r];
];
</code>
</function>

<function name=RGEGet\[Kappa]>
<head>
RGEGet\[Kappa]::usage="RGEGet\[Kappa][\[Theta]12,\[Theta]13,\[Theta]23,\[Delta],\[Delta]e,\[Delta]\[Mu],\[Delta]\[Tau],\[Phi]1,\[Phi]2,Mlightest,\[CapitalDelta]m2atm,\[CapitalDelta]m2sol,MassHierarchy,
vev of the Higgs coupling
to the neutrinos \!\(v\_u\) (GeV)] returns \[Kappa] in \!\(GeV\^\(-1\)\).";
</head>
<doc level=advanced>
\function{RGEGet$\kappa$[\param{$\theta_{12}$},\param{$\theta_{13}$},\param{$\theta_{23}$},\param{$\delta$},\param{$\delta_e$},\param{$\delta_\mu$},\param{$\delta_\tau$},\param{$\varphi_1$},\param{$\varphi_2$},\param{Mlightest},\param{$\Delta
m^2_\mathrm{atm}$},\param{$\Delta m^2_\mathrm{sol}$},\param{mass hierarchy},\param{vu}]} returns a suggestion for
    $\kappa$, the coupling of the dimension 5 operator, in
$\mathrm{GeV}^{-1}$.
\begin{itemize}
\item The first 9 parameters specify the mixing matrix.
\item The 10th parameter is the mass of the lightest neutrino.
\item The 11th and 12th parameter are the mass squared differences of the
atmospheric and solar neutrino oscillations, respectively.
\item The 13th parameter is the mass hierarchy. "i" means inverted and "r" or
"n" means normal.
\item The 14th parameter is the vev of the Higgs coupling
to the neutrinos.
\end{itemize}
<implementation>
  At first the mass eigenvalues of the neutrino mass matrix are calculated from
  \param{Mlightest},\param{$\Delta m^2_\mathrm{atm}$},\param{$\Delta m^2_\mathrm{sol}$} and \param{mass hierarchy}. Together they build up the diagonal neutrino mass matrix $M$. Then the leptonic mixing matrix $V$ in standard parametrization is generated by the function \function{MPT3x3UnitaryMatrix} from \package{MixingParameterTools`MPT3x3`}. Finally, $\kappa$, the coefficient of the dimension 5 operator is calculated:
  \begin{equation*}
    \kappa=-V^* M V^\dagger \cdot \frac{4}{v^2} \cdot 10^{-9}
  \end{equation*}
</implementation>
</doc>
<code>
RGEGet\[Kappa][p\[Theta]12_?NumericQ,p\[Theta]13_?NumericQ,p\[Theta]23_?NumericQ,pDiracCP_?NumericQ,p\[Delta]e_?NumericQ,p\[Delta]\[Mu]_?NumericQ,p\[Delta]\[Tau]_?NumericQ,p\[Phi]1_?NumericQ,p\[Phi]2_?NumericQ,pMlightest_?NumericQ,p\[CapitalDelta]atm_?NumericQ,p\[CapitalDelta]sol_?NumericQ,pMassHierarchy_,pvu_?NumericQ]:=Block[{lV, lM, l\[Kappa]},
    lV = MPT3x3UnitaryMatrix[p\[Theta]12, p\[Theta]13, p\[Theta]23, pDiracCP, p\[Delta]e, p\[Delta]\[Mu], p\[Delta]\[Tau], p\[Phi]1, p\[Phi]2];

    lM = DiagonalMatrix[RGEGetNeutrinoMasses[pMassHierarchy,p\[CapitalDelta]atm,p\[CapitalDelta]sol,pMlightest]];
    l\[Kappa] = - 10^-9 *4/pvu^2*Conjugate[lV].lM.Dagger[lV];
    Return[l\[Kappa]];
];
</code>
</function>

<function name=RGEGetDiracY\[Nu]>
<head>
RGEGetDiracY\[Nu]::usage="RGEGetDiracY\[Nu][\[Theta]12,\[Theta]13,\[Theta]23,\[Delta],\[Delta]e,\[Delta]\[Mu],\[Delta]\[Tau],\[Phi]1,\[Phi]2,Mlightest,\[CapitalDelta]m2atm,\[CapitalDelta]m2sol,MassHierarchy, vev of the Higgs coupling
to the neutrinos \!\(v\_u\) (GeV)] returns Y\[Nu].";
</head>
<doc level=advanced>
\function{RGEGetDiracY$\nu$[\param{$\theta_{12}$}, \param{$\theta_{13}$},
    \param{$\theta_{23}$}, \param{$\delta$}, \param{$\delta_e$}, \param{$\delta_\mu$}, \param{$\delta_\tau$},
    \param{$\varphi_1$}, \param{$\varphi_2$}, \param{Mlightest}, \param{$\Delta m^2_\mathrm{atm}$}, \param{$\Delta m^2_\mathrm{sol}$}, \param{mass hierarchy}, \param{vu}]} returns a suggestion for Y$\nu$
    in the case of Dirac neutrinos.
\begin{itemize}
\item The first 9 parameters specify the mixing matrix.
\item The 10th parameter is the mass of the lightest neutrino.
\item The 11th and 12th parameter are the mass squared differences of the
atmospheric and solar neutrino oscillations respectively.
\item The 13th parameter is the mass hierarchy. "i" means inverted and "r" or
"n" means normal.
\item The 14th parameter is the vev of the Higgs coupling
to the neutrinos.
\end{itemize}
<implementation>
  At first the mass eigenvalues of the neutrino mass matrix are calculated from
  \param{Mlightest},\param{$\Delta m^2_\mathrm{atm}$},\param{$\Delta m^2_\mathrm{sol}$} and \param{mass hierarchy}. Together they build up the diagonal neutrino mass matrix $M$. Then the leptonic mixing matrix $V$ in standard parametrization is generated by the function \function{MPT3x3UnitaryMatrix} from \package{MixingParameterTools`MPT3x3`}. Finally, the Yukawa coupling matrix is calculated:
  \begin{equation*}
    Y_\nu=V M V^\dagger \cdot \frac{\sqrt{2}}{v} \cdot 10^{-9}
  \end{equation*}
</implementation>
</doc>
<code>
RGEGetDiracY\[Nu][p\[Theta]12_?NumericQ,p\[Theta]13_?NumericQ,p\[Theta]23_?NumericQ,pDiracCP_?NumericQ,p\[Delta]e_?NumericQ,p\[Delta]\[Mu]_?NumericQ,p\[Delta]\[Tau]_?NumericQ,p\[Phi]1_?NumericQ,p\[Phi]2_?NumericQ,pMlightest_?NumericQ,p\[CapitalDelta]atm_?NumericQ,p\[CapitalDelta]sol_?NumericQ,pMassHierarchy_,pvu_?NumericQ]:=Block[{lV, lM, l\[Kappa]},
    lV = MPT3x3UnitaryMatrix[p\[Theta]12, p\[Theta]13, p\[Theta]23, pDiracCP, p\[Delta]e, p\[Delta]\[Mu], p\[Delta]\[Tau], p\[Phi]1, p\[Phi]2];

    lM = DiagonalMatrix[RGEGetNeutrinoMasses[pMassHierarchy,p\[CapitalDelta]atm,p\[CapitalDelta]sol,pMlightest]];
    lY\[Nu] = 10^-9 Sqrt[2]/pvu*lV.lM.Dagger[lV];
    Return[lY\[Nu]];
];
</code>
</function>



<function name=RGEGetYd>
<head>
RGEGetYd::usage="RGEGetYd[y1,y2,y3,\[Theta]12,\[Theta]13,\[Theta]23,\[Delta],\[Delta]e,\[Delta]\[Mu],\[Delta]\[Tau],\[Phi]1,\[Phi]2] returns Yd.";
</head>
<doc level=advanced>
\function{RGEGetYd[\param{$y_1$}, \param{$y_2$}, \param{$y_3$}, \param{$\theta_{12}$},\param{$\theta_{13}$}, \param{$\theta_{23}$},\param{$\delta$},\param{$\delta_e$},\param{$\delta_\mu$},\param{$\delta_\tau$},\param{$\varphi_1$},\param{$\varphi_2$}]} returns a suggestion for
    Yd.
\begin{itemize}
\item The first 3 parameters are the eigenvalues of $Y_d$.
\item The next 9 parameters are the mixing parameters.
\end{itemize}
<implementation>
  \begin{equation*}
    Yd= V Yd^\text{diag} V^\dagger
  \end{equation*}
</implementation>
</doc>
<code>
RGEGetYd[py1_?NumericQ,py2_?NumericQ,py3_?NumericQ,p\[Theta]12_?NumericQ,p\[Theta]13_?NumericQ,p\[Theta]23_?NumericQ,p\[Delta]_?NumericQ,p\[Delta]e_?NumericQ,p\[Delta]\[Mu]_?NumericQ,p\[Delta]\[Tau]_?NumericQ,p\[Phi]1_?NumericQ,p\[Phi]2_?NumericQ]:=Block[{lV},
    lV = MPT3x3UnitaryMatrix[p\[Theta]12, p\[Theta]13, p\[Theta]23, p\[Delta], p\[Delta]e, p\[Delta]\[Mu], p\[Delta]\[Tau], p\[Phi]1, p\[Phi]2];
    Return[lV.DiagonalMatrix[{py1,py2,py3}].Dagger[lV]];
];
</code>
</function>
